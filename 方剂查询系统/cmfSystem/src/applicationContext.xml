<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="       
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd       
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd       
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">


	<!-- 导入属性配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:Mongo-db.properties</value>
			</list>
		</property>
	</bean>

	<!-- 使用工厂创建mongo实例 -->  
	<bean id="mongo"
		class="cn.edu.hbtcm.pre.ext.MongoFactoryBean">
		<property name="multiAddress">
			<list>
				<value>${mongo.db.host}</value>
			</list>
		</property>
	</bean>

	<!-- 使用工厂创建morphia实例，同时完成类映射操作 -->  
	<bean id="morphia"
		class="cn.edu.hbtcm.pre.ext.MorphiaFactoryBean">
		<property name="mapPackages">
			<list>
				<value>cn.edu.hbtcm.pre.domain</value>
			</list>
		</property>
	</bean>
	<!-- 使用工厂创建datastore -->  
	<bean id="dataStore"
		class="cn.edu.hbtcm.pre.ext.DataStoreFactoryBean">
		<property name="morphia" ref="morphia"></property>
		<property name="mongo" ref="mongo"></property>
		<property name="dbName" value="pre"></property>
	</bean>
<!-- ===============以下是具体DAO的实现===================== -->  
	<bean id="prescriptionDao"
		class="cn.edu.hbtcm.pre.dao.impl.PrescriptionDaoImpl">
		<constructor-arg ref="dataStore" index="0" />
	</bean>
	<bean id="adminDao"
		class="cn.edu.hbtcm.pre.dao.impl.AdminDaoImpl">
		<constructor-arg ref="dataStore" index="0" />
	</bean>
	<bean id="medicineDao"
		class="cn.edu.hbtcm.pre.dao.impl.MedicineDaoImpl">
		<constructor-arg ref="dataStore" index="0" />
	</bean>
		<bean id="relationDao"
		class="cn.edu.hbtcm.pre.dao.impl.RelationDaoImpl">
		<constructor-arg ref="dataStore" index="0" />
	</bean>
	<bean id="matrixRelationDao"
		class="cn.edu.hbtcm.pre.dao.impl.MatrixRelationDaoImpl">
		<constructor-arg ref="dataStore" index="0" />
	</bean>
<!-- ===============以下是具体Service的实现===================== -->  
	<bean id="prescriptionService"
		class="cn.edu.hbtcm.pre.service.impl.PrescriptionServiceImpl">
		<property name="prescriptionDao" ref="prescriptionDao"></property>
	</bean>
	<bean id="adminService"
		class="cn.edu.hbtcm.pre.service.impl.AdminServiceImpl">
		<property name="adminDao" ref="adminDao"></property>
	</bean>
	<bean id="medicineService"
		class="cn.edu.hbtcm.pre.service.impl.MedicineServiceImpl">
		<property name="medicineDao" ref="medicineDao"></property>
	</bean>
	<bean id="relationService"
		class="cn.edu.hbtcm.pre.service.impl.RelationServiceImpl">
		<property name="relationDao" ref="relationDao"></property>
		<property name="prescriptionDao" ref="prescriptionDao"></property>
	</bean>
	<bean id="matrixRelationService"
		class="cn.edu.hbtcm.pre.service.impl.MatrixRelationServiceImpl">
		<property name="matrixRelationDao" ref="matrixRelationDao"></property>
		<property name="medicineDao" ref="medicineDao"></property>
		<property name="prescriptionDao" ref="prescriptionDao"></property>
		<property name="relationDao" ref="relationDao"></property>
	</bean>
	<bean id="relationshipService"
		class="cn.edu.hbtcm.pre.service.impl.RelationshipServiceImpl">
		<property name="medicineDao" ref="medicineDao"></property>
		<property name="prescriptionDao" ref="prescriptionDao"></property>
	</bean>
</beans>
